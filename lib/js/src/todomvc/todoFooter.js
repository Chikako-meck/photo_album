// Generated by BUCKLESCRIPT VERSION 1.7.3, PLEASE EDIT WITH CARE
'use strict';

var Curry      = require("bs-platform/lib/js/curry.js");
var React      = require("react");
var ReactRe    = require("reason-react/lib/js/src/reactRe.js");
var Pervasives = require("bs-platform/lib/js/pervasives.js");

var componentDidMount = ReactRe.Component[0];

var componentWillUpdate = ReactRe.Component[1];

var componentDidUpdate = ReactRe.Component[2];

var componentWillReceiveProps = ReactRe.Component[3];

var componentWillUnmount = ReactRe.Component[4];

var getInstanceVars = ReactRe.Component[5];

var jsPropsToReasonProps = ReactRe.Component[6];

var getInitialState = ReactRe.Component[7];

var name = "TodoFooterRe";

function render(param) {
  var props = param[/* props */1];
  var match = +(props[/* count */0] === 1);
  var activeTodoWord = match !== 0 ? "item" : "items";
  var match$1 = +(props[/* completedCount */1] > 0);
  var clearButton = match$1 !== 0 ? React.createElement("button", {
          className: "clear-completed",
          onClick: props[/* onClearCompleted */3]
        }, "Clear completed") : null;
  var match$2 = props[/* nowShowing */2];
  var match$3;
  switch (match$2) {
    case 0 : 
        match$3 = /* tuple */[
          "selected",
          "",
          ""
        ];
        break;
    case 1 : 
        match$3 = /* tuple */[
          "",
          "selected",
          ""
        ];
        break;
    case 2 : 
        match$3 = /* tuple */[
          "",
          "",
          "selected"
        ];
        break;
    
  }
  return React.createElement("footer", {
              className: "footer"
            }, React.createElement("span", {
                  className: "todo-count"
                }, React.createElement("strong", undefined, Pervasives.string_of_int(props[/* count */0])), " " + (activeTodoWord + " left")), React.createElement("ul", {
                  className: "filters"
                }, React.createElement("li", undefined, React.createElement("a", {
                          className: match$3[0],
                          href: "#/"
                        }, "All")), " ", React.createElement("li", undefined, React.createElement("a", {
                          className: match$3[1],
                          href: "#/active"
                        }, "Active")), " ", React.createElement("li", undefined, React.createElement("a", {
                          className: match$3[2],
                          href: "#/completed"
                        }, "Completed"))), clearButton);
}

var TodoFooter_008 = /* Stateful */ReactRe.Component[8];

var TodoFooter_009 = /* JsProps */ReactRe.Component[9];

var TodoFooter_010 = /* InstanceVars */ReactRe.Component[10];

var TodoFooter = /* module */[
  /* componentDidMount */componentDidMount,
  /* componentWillUpdate */componentWillUpdate,
  /* componentDidUpdate */componentDidUpdate,
  /* componentWillReceiveProps */componentWillReceiveProps,
  /* componentWillUnmount */componentWillUnmount,
  /* getInstanceVars */getInstanceVars,
  /* jsPropsToReasonProps */jsPropsToReasonProps,
  /* getInitialState */getInitialState,
  TodoFooter_008,
  TodoFooter_009,
  TodoFooter_010,
  /* name */name,
  /* render */render
];

var include = ReactRe.CreateComponent([
      name,
      getInstanceVars,
      getInitialState,
      componentDidMount,
      componentWillReceiveProps,
      componentWillUpdate,
      componentDidUpdate,
      componentWillUnmount,
      jsPropsToReasonProps,
      render
    ]);

var wrapProps = include[1];

function createElement(count, completedCount, nowShowing, onClearCompleted) {
  return Curry._1(wrapProps, /* record */[
              /* count */count,
              /* completedCount */completedCount,
              /* nowShowing */nowShowing,
              /* onClearCompleted */onClearCompleted
            ]);
}

var comp = include[0];

exports.TodoFooter    = TodoFooter;
exports.comp          = comp;
exports.wrapProps     = wrapProps;
exports.createElement = createElement;
/* include Not a pure module */
