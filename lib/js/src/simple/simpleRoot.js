// Generated by BUCKLESCRIPT VERSION 1.8.1, PLEASE EDIT WITH CARE
'use strict';

var List        = require("bs-platform/lib/js/list.js");
var Block       = require("bs-platform/lib/js/block.js");
var Curry       = require("bs-platform/lib/js/curry.js");
var React       = require("react");
var Pervasives  = require("bs-platform/lib/js/pervasives.js");
var ReactDOMRe  = require("reason-react/lib/js/src/reactDOMRe.js");
var ReasonReact = require("reason-react/lib/js/src/reasonReact.js");

function wrap_div(element) {
  return React.createElement("div", undefined, element);
}

var i = Pervasives.string_of_int;

function s(str) {
  return str;
}

function pair(param) {
  return React.createElement("tr", undefined, React.createElement("td", undefined, param[0]), React.createElement("td", undefined, param[1]), React.createElement("td", undefined, React.createElement("img", {
                      height: "100px",
                      src: param[2]
                    })));
}

function wrap_h(n, element) {
  var switcher = n - 1 | 0;
  if (switcher > 2 || switcher < 0) {
    return React.createElement("h4", undefined, element);
  } else {
    switch (switcher) {
      case 0 : 
          return React.createElement("h1", undefined, element);
      case 1 : 
          return React.createElement("h2", undefined, element);
      case 2 : 
          return React.createElement("h3", undefined, element);
      
    }
  }
}

function value_of_event($$event) {
  return $$event.target.value;
}

function name_of_event($$event) {
  return $$event.target.name;
}

function show_image(filename) {
  return React.createElement("img", {
              src: filename
            });
}

console.log("This is console log");

var component = ReasonReact.statefulComponent("photo");

function handleSelect($$event, param) {
  var value = $$event.target.value;
  var newrecord = param[/* state */3].slice();
  return /* Update */Block.__(0, [(newrecord[/* category */0] = value, newrecord)]);
}

function handleChange($$event, param) {
  var value = $$event.target.value;
  var newrecord = param[/* state */3].slice();
  return /* Update */Block.__(0, [(newrecord[/* filename */1] = value, newrecord)]);
}

function handleSend(_, param) {
  var state = param[/* state */3];
  var category = state[/* category */0];
  var file = state[/* filename */1];
  var date = state[/* date */2];
  return /* Update */Block.__(0, [/* record */[
              /* category */"food",
              /* filename */"",
              /* date */state[/* date */2],
              /* keyword_date */state[/* keyword_date */3],
              /* keyword_category */state[/* keyword_category */4],
              /* history : :: */[
                /* tuple */[
                  date,
                  category,
                  file
                ],
                state[/* history */5]
              ]
            ]]);
}

function handleDate($$event, param) {
  var date = $$event.target.value;
  var newrecord = param[/* state */3].slice();
  return /* Update */Block.__(0, [(newrecord[/* date */2] = date, newrecord)]);
}

function handleKeyword_date($$event, param) {
  var keyword = $$event.target.value;
  var newrecord = param[/* state */3].slice();
  return /* Update */Block.__(0, [(newrecord[/* keyword_date */3] = keyword, newrecord)]);
}

function handleKeyword_category($$event, param) {
  var keyword = $$event.target.value;
  var newrecord = param[/* state */3].slice();
  return /* Update */Block.__(0, [(newrecord[/* keyword_category */4] = keyword, newrecord)]);
}

function showHistory(history) {
  return List.map(pair, history);
}

function make() {
  var newrecord = component.slice();
  newrecord[/* render */9] = (function (param) {
      var state = param[/* state */3];
      var update = param[/* update */2];
      return React.createElement("div", undefined, "*Please input date, category and URL of image.", React.createElement("br", undefined), React.createElement("br", undefined), React.createElement("form", {
                      action: "/cgi-bin/insert.py",
                      method: "POST",
                      name: "From"
                    }, React.createElement("table", {
                          id: "input"
                        }, React.createElement("tr", undefined, React.createElement("td", undefined, "date: "), React.createElement("td", undefined, React.createElement("input", {
                                      name: "date",
                                      type: "date",
                                      value: state[/* date */2],
                                      onChange: Curry._1(update, handleDate)
                                    }))), React.createElement("tr", undefined, React.createElement("td", undefined, "category: "), React.createElement("td", undefined, React.createElement("select", {
                                      name: "category",
                                      value: state[/* category */0],
                                      onChange: Curry._1(update, handleSelect)
                                    }, React.createElement("option", {
                                          value: "food"
                                        }, "food"), React.createElement("option", {
                                          value: "landscape"
                                        }, "landscape"), React.createElement("option", {
                                          value: "animal"
                                        }, "animal"), React.createElement("option", {
                                          value: "friend"
                                        }, "friend")))), React.createElement("tr", undefined, React.createElement("td", undefined, "FILE: "), React.createElement("td", undefined, React.createElement("input", {
                                      name: "filename",
                                      type: "url",
                                      value: state[/* filename */1],
                                      onChange: Curry._1(update, handleChange)
                                    })))), React.createElement("br", undefined), React.createElement("input", {
                          id: "store",
                          name: "store",
                          type: "submit",
                          value: "store"
                        })), React.createElement("br", undefined), React.createElement("br", undefined), React.createElement("br", undefined), "*Please input keyword(date or category) to search images", React.createElement("br", undefined), React.createElement("br", undefined), React.createElement("form", {
                      action: "/cgi-bin/search.py",
                      method: "POST",
                      name: "From"
                    }, "date: ", React.createElement("input", {
                          name: "keyword_date",
                          type: "date",
                          value: state[/* keyword_date */3],
                          onChange: Curry._1(update, handleKeyword_date)
                        }), React.createElement("br", undefined), "category: ", React.createElement("select", {
                          name: "keyword_category",
                          value: state[/* keyword_category */4],
                          onChange: Curry._1(update, handleKeyword_category)
                        }, React.createElement("option", {
                              value: "none"
                            }, "none"), React.createElement("option", {
                              value: "food"
                            }, "food"), React.createElement("option", {
                              value: "landscape"
                            }, "landscape"), React.createElement("option", {
                              value: "animal"
                            }, "animal"), React.createElement("option", {
                              value: "friend"
                            }, "friend")), React.createElement("br", undefined), React.createElement("input", {
                          id: "search",
                          name: "search",
                          type: "submit",
                          value: "search"
                        })));
    });
  newrecord[/* initialState */10] = (function () {
      return /* record */[
              /* category */"none",
              /* filename */"",
              /* date */"1970-01-01",
              /* keyword_date */"1970-01-01",
              /* keyword_category */"none",
              /* history : [] */0
            ];
    });
  return newrecord;
}

var Photo = /* module */[
  /* component */component,
  /* handleSelect */handleSelect,
  /* handleChange */handleChange,
  /* handleSend */handleSend,
  /* handleDate */handleDate,
  /* handleKeyword_date */handleKeyword_date,
  /* handleKeyword_category */handleKeyword_category,
  /* showHistory */showHistory,
  /* make */make
];

ReactDOMRe.renderToElementWithId(React.createElement("div", undefined, wrap_h(1, "Photo Album"), React.createElement("hr", undefined), React.createElement("br", undefined), ReasonReact.element(/* None */0, /* None */0, make(/* array */[]))), "index");

exports.wrap_div       = wrap_div;
exports.i              = i;
exports.s              = s;
exports.pair           = pair;
exports.wrap_h         = wrap_h;
exports.value_of_event = value_of_event;
exports.name_of_event  = name_of_event;
exports.show_image     = show_image;
exports.Photo          = Photo;
/*  Not a pure module */
