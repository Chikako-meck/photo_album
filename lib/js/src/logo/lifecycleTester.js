// Generated by BUCKLESCRIPT VERSION 1.6.0, PLEASE EDIT WITH CARE
'use strict';

var Logo       = require("./logo");
var Curry      = require("bs-platform/lib/js/curry");
var React      = require("react");
var ReactRe    = require("reason-react/lib/js/src/reactRe");
var Pervasives = require("bs-platform/lib/js/pervasives");

var include = ReactRe.Component[/* Stateful */8];

var componentWillUpdate = include[1];

var componentDidUpdate = include[2];

var componentWillReceiveProps = include[3];

var componentWillUnmount = include[4];

var getInstanceVars = include[5];

var jsPropsToReasonProps = include[6];

var name = "StandardTester";

function getInitialState(props) {
  return /* record */[/* clicks */props[/* initialCount */1]];
}

function handleClick(param, _) {
  return /* Some */[/* record */[/* clicks */param[/* state */0][/* clicks */0] + param[/* props */1][/* incr */2] | 0]];
}

function componentDidMount(param) {
  var props = param[/* props */1];
  Pervasives.print_string("IN MOUNT");
  Pervasives.print_newline(/* () */0);
  var match = props[/* incrOnDidMount */0];
  if (match !== 0) {
    return /* Some */[/* record */[/* clicks */param[/* state */0][/* clicks */0] + props[/* incr */2] | 0]];
  } else {
    return /* None */0;
  }
}

function render(param) {
  return React.createElement("div", undefined, React.createElement("button", {
                  onClick: Curry._1(param[/* updater */2], handleClick)
                }, "Clicked " + (Pervasives.string_of_int(param[/* state */0][/* clicks */0]) + " time(s)")), Curry._4(Logo.createElement("Hello!"), /* [] */0, /* None */0, /* None */0, /* () */0));
}

var StandardTesterImpl_006 = /* JsProps */include[7];

var StandardTesterImpl_007 = /* InstanceVars */include[8];

var StandardTesterImpl = /* module */[
  /* componentWillUpdate */componentWillUpdate,
  /* componentDidUpdate */componentDidUpdate,
  /* componentWillReceiveProps */componentWillReceiveProps,
  /* componentWillUnmount */componentWillUnmount,
  /* getInstanceVars */getInstanceVars,
  /* jsPropsToReasonProps */jsPropsToReasonProps,
  StandardTesterImpl_006,
  StandardTesterImpl_007,
  /* name */name,
  /* getInitialState */getInitialState,
  /* handleClick */handleClick,
  /* componentDidMount */componentDidMount,
  /* render */render
];

var include$1 = ReactRe.CreateComponent([
      name,
      getInstanceVars,
      getInitialState,
      componentDidMount,
      componentWillReceiveProps,
      componentWillUpdate,
      componentDidUpdate,
      componentWillUnmount,
      jsPropsToReasonProps,
      render
    ]);

var wrapProps = include$1[1];

function createElement($staropt$star, $staropt$star$1, $staropt$star$2) {
  var incrOnDidMount = $staropt$star ? $staropt$star[0] : /* false */0;
  var incr = $staropt$star$1 ? $staropt$star$1[0] : 0;
  var initialCount = $staropt$star$2 ? $staropt$star$2[0] : 0;
  return Curry._1(wrapProps, /* record */[
              /* incrOnDidMount */incrOnDidMount,
              /* initialCount */initialCount,
              /* incr */incr
            ]);
}

var StandardTester_000 = /* comp */include$1[0];

var StandardTester = /* module */[
  StandardTester_000,
  /* wrapProps */wrapProps,
  /* createElement */createElement
];

var include$2 = ReactRe.Component[/* Stateful */8][/* InstanceVars */8];

var componentWillUpdate$1 = include$2[1];

var componentDidUpdate$1 = include$2[2];

var componentWillReceiveProps$1 = include$2[3];

var componentWillUnmount$1 = include$2[4];

var jsPropsToReasonProps$1 = include$2[5];

var name$1 = "LifecycleTester";

function getInitialState$1(props) {
  return /* record */[/* clicks */props[/* initialCount */1]];
}

function getInstanceVars$1() {
  return /* tuple */[
          10,
          "test"
        ];
}

function handleClick$1(param, _) {
  return /* Some */[/* record */[/* clicks */param[/* state */0][/* clicks */0] + param[/* props */1][/* incr */2] | 0]];
}

function componentDidMount$1(param) {
  var props = param[/* props */1];
  var match = props[/* incrOnDidMount */0];
  if (match !== 0) {
    return /* Some */[/* record */[/* clicks */param[/* state */0][/* clicks */0] + props[/* incr */2] | 0]];
  } else {
    return /* None */0;
  }
}

function render$1(param) {
  return React.createElement("div", undefined, React.createElement("button", {
                  onClick: Curry._1(param[/* updater */2], handleClick$1)
                }, "Clicked " + (Pervasives.string_of_int(param[/* state */0][/* clicks */0]) + " time(s)")), Curry._4(Logo.createElement("Hello!"), /* [] */0, /* None */0, /* None */0, /* () */0));
}

var WithStatefulInstanceVarsImpl_005 = /* JsProps */include$2[6];

var WithStatefulInstanceVarsImpl = /* module */[
  /* componentWillUpdate */componentWillUpdate$1,
  /* componentDidUpdate */componentDidUpdate$1,
  /* componentWillReceiveProps */componentWillReceiveProps$1,
  /* componentWillUnmount */componentWillUnmount$1,
  /* jsPropsToReasonProps */jsPropsToReasonProps$1,
  WithStatefulInstanceVarsImpl_005,
  /* name */name$1,
  /* getInitialState */getInitialState$1,
  /* getInstanceVars */getInstanceVars$1,
  /* handleClick */handleClick$1,
  /* componentDidMount */componentDidMount$1,
  /* render */render$1
];

var include$3 = ReactRe.CreateComponent([
      name$1,
      getInstanceVars$1,
      getInitialState$1,
      componentDidMount$1,
      componentWillReceiveProps$1,
      componentWillUpdate$1,
      componentDidUpdate$1,
      componentWillUnmount$1,
      jsPropsToReasonProps$1,
      render$1
    ]);

var wrapProps$1 = include$3[1];

function createElement$1($staropt$star, $staropt$star$1, $staropt$star$2) {
  var incrOnDidMount = $staropt$star ? $staropt$star[0] : /* false */0;
  var incr = $staropt$star$1 ? $staropt$star$1[0] : 0;
  var initialCount = $staropt$star$2 ? $staropt$star$2[0] : 0;
  return Curry._1(wrapProps$1, /* record */[
              /* incrOnDidMount */incrOnDidMount,
              /* initialCount */initialCount,
              /* incr */incr
            ]);
}

var WithStatefulInstanceVars_000 = /* comp */include$3[0];

var WithStatefulInstanceVars = /* module */[
  WithStatefulInstanceVars_000,
  /* wrapProps */wrapProps$1,
  /* createElement */createElement$1
];

exports.StandardTesterImpl           = StandardTesterImpl;
exports.StandardTester               = StandardTester;
exports.WithStatefulInstanceVarsImpl = WithStatefulInstanceVarsImpl;
exports.WithStatefulInstanceVars     = WithStatefulInstanceVars;
/* include Not a pure module */
